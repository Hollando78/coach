import{L as e}from"./index-jWkOtuW3.js";function n(e){return e.split(" ").filter(e=>""!==e).map(e=>parseFloat(e))}function l(e,l,t){for(;t.length!==l;){const l=n(e.lines[e.index++]);t.push(...l)}}function t(n,l,t){let a=0,r=0,i=0,o=0,s=0,u=0;for(let e=0;e<n.numberOfHorizontalAngles-1;e++)if(t<n.horizontalAngles[e+1]||e===n.numberOfHorizontalAngles-2){r=e,i=n.horizontalAngles[e],o=n.horizontalAngles[e+1];break}for(let e=0;e<n.numberOfVerticalAngles-1;e++)if(l<n.verticalAngles[e+1]||e===n.numberOfVerticalAngles-2){a=e,s=n.verticalAngles[e],u=n.verticalAngles[e+1];break}const c=o-i,f=u-s;if(0===f)return 0;const g=0===c?0:(t-i)/c,d=(l-s)/f,A=0===c?r:r+1,m=e(n.candelaValues[r][a],n.candelaValues[A][a],g),b=e(n.candelaValues[r][a+1],n.candelaValues[A][a+1],g);return e(m,b,d)}class a{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(e,a,r){const i=function(e){const a={lines:new TextDecoder("utf-8").decode(e).split("\n"),index:0},r={version:a.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(a.index=1;a.lines.length>0&&!a.lines[a.index].includes("TILT=");)a.index++;a.lines[a.index].includes("INCLUDE"),a.index++;const i=n(a.lines[a.index++]);r.numberOfLights=i[0],r.lumensPerLamp=i[1],r.candelaMultiplier=i[2],r.numberOfVerticalAngles=i[3],r.numberOfHorizontalAngles=i[4],r.photometricType=i[5],r.unitsType=i[6],r.width=i[7],r.length=i[8],r.height=i[9];const o=n(a.lines[a.index++]);r.ballastFactor=o[0],r.fileGenerationType=o[1],r.inputWatts=o[2];for(let n=0;n<r.numberOfHorizontalAngles;n++)r.candelaValues[n]=[];l(a,r.numberOfVerticalAngles,r.verticalAngles),l(a,r.numberOfHorizontalAngles,r.horizontalAngles);for(let n=0;n<r.numberOfHorizontalAngles;n++)l(a,r.numberOfVerticalAngles,r.candelaValues[n]);let s=-1;for(let n=0;n<r.numberOfHorizontalAngles;n++)for(let e=0;e<r.numberOfVerticalAngles;e++)r.candelaValues[n][e]*=r.candelaValues[n][e]*r.candelaMultiplier*r.ballastFactor*r.fileGenerationType,s=Math.max(s,r.candelaValues[n][e]);if(s>0)for(let n=0;n<r.numberOfHorizontalAngles;n++)for(let e=0;e<r.numberOfVerticalAngles;e++)r.candelaValues[n][e]/=s;const u=180,c=360,f=new Float32Array(64800),g=r.horizontalAngles[0],d=r.horizontalAngles[r.numberOfHorizontalAngles-1];for(let n=0;n<64800;n++){let e=n%c;const l=Math.floor(n/c);d-g!==0&&(e<g||e>=d)&&(e%=2*d,e>d&&(e=2*d-e)),f[l+e*u]=t(r,l,e)}return{width:180,height:1,data:f}}(new Uint8Array(e.buffer,e.byteOffset,e.byteLength));r(i.width,i.height,!1,!1,()=>{const e=a.getEngine();a.type=1,a.format=6,a._gammaSpace=!1,e._uploadDataToTextureDirectly(a,i.data)})}}export{a as _IESTextureLoader};
//# sourceMappingURL=iesTextureLoader-Bkc5_mYP.js.map
